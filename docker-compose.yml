version: '3'

services:
  django1:
    build:
      context: ./task1
      dockerfile: dockerfile
    container_name: django_app_1
    ports:
      - "8001:8001"
    environment:
      - DJANGO_DEBUG=1
      - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydb  
    command: gunicorn key_value.wsgi:application --bind 0.0.0.0:8001

  django2:
    build:
      context: ./task1
      dockerfile: dockerfile
    container_name: django_app_2
    ports:
      - "8002:8002"
    environment:
      - DJANGO_DEBUG=1
      - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydb  
    command: gunicorn key_value.wsgi:application --bind 0.0.0.0:8002

  django3:
    build:
      context: ./task1
      dockerfile: dockerfile
    container_name: django_app_3
    ports:
      - "8003:8003"
    environment:
      - DJANGO_DEBUG=1
      - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydb  
    command: gunicorn key_value.wsgi:application --bind 0.0.0.0:8003


  nginx:
    build:
      context: ./task3
      dockerfile: dockerfile
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./task3/nginx.conf:/etc/nginx/nginx.conf 
    links:
      - django1
      - django2
      - django3
    depends_on:
      - django1
      - django2
      - django3
    
  prometheus:
    build:
      context: ./task5/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./task5/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - django1
      - django2
      - django3
  
  grafana:
    build:
      context: ./task5/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
  
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    ports:
      - "5601:5601"
  
  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.1
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
  
  db_master:
    image: postgres:13
    container_name: db_master
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - db_master_data:/var/lib/postgresql/data
      - ./task4/master/postgresql.conf:/etc/postgresql/postgresql.conf 
      - ./task4/master/pg_hba.conf:/etc/postgresql/pg_hba.conf
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]

  db_replica:
    image: postgres:13
    container_name: db_replica
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - db_replica_data:/var/lib/postgresql/data
      - ./task4/replica/recovery.conf:/var/lib/postgresql/data/recovery.conf
    ports:
      - "5433:5432"
    depends_on:
      - db_master
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]

volumes:
  db_master_data: 
  db_replica_data:
  grafana-storage: